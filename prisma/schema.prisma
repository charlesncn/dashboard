generator client {
  provider = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model access_token {
  token_id        BigInt           @id
  access_token    String?          @unique(map: "uk_qglhb4xi0iwstguebaliifr1n") @db.VarChar
  expired         Boolean
  revoked         Boolean
  token_type      String?          @db.VarChar
  user_id         BigInt?
  sms_system_user sms_system_user? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk3uw6a039wdn422er3ctvbvk5r")
}

model smpp_client_table {
  id                 BigInt    @id(map: "smstable_pkey") @default(autoincrement())
  delivery_date      DateTime? @db.Timestamp(6)
  message            String?   @db.VarChar(255)
  message_id         String?   @db.VarChar(255)
  receiver_msisdn    String?   @db.VarChar(255)
  sender_name        String?   @db.VarChar(255)
  sms_status         String?   @db.VarChar(255)
  submitted_date     DateTime? @db.Timestamp(6)
  callback_url       String?   @db.VarChar(255)
  loaded_to_queue    Boolean?
  created_date       DateTime? @db.Timestamp(6)
  last_modified_date DateTime? @db.Timestamp(6)
  last_modified_by   BigInt?
  created_by         BigInt?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model sms_system_user {
  id           BigInt         @id @default(autoincrement())
  created_at   String?        @db.VarChar(255)
  password     String?        @db.VarChar(255)
  role         String?        @db.VarChar(255)
  status       String?        @db.VarChar(255)
  username     String?        @db.VarChar(255)
  access_token access_token[]
  token        token[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token {
  id              BigInt           @id
  access_token    String?          @unique(map: "uk_f037fgtnpxdfhme836yhqb6gh") @db.VarChar(255)
  expired         Boolean
  revoked         Boolean
  token_type      String?          @db.VarChar(255)
  user_id         BigInt?
  sms_system_user sms_system_user? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkhh0ifmclk27qlojwdyu7o8fr1")
}
